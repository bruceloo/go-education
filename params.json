{
  "name": "Go Education",
  "tagline": "",
  "body": "### Learning Go\r\nWelcome. This is a small page which tells you about how the course is run and what we will be covering each week. \r\n\r\nThe main purpose of the course is to jump start developers into learning Go with the view that they can start writing Go on their projects. The first couple of lessons are designed to cover the absolute basics and assumes no prior knowledge of Go. After the basics, we will be moving onto some more immediate/advanced topics. We will then be doing a deep dive into 1-2 of the standard library packages per week. The topics covered may change slightly depending on our progress.\r\n\r\n## Lesson 1\r\n- Intro to the course\r\n- About Go and its origins\r\n- Go's basic tooling\r\n- Learn about Go's syntax\r\n- Control structures\r\n- Storing data\r\n- TASK - Maps excerise\r\n- Flags package\r\n- TASK - build a service\r\n\r\n## Lesson 2\r\n- Testing\r\n- Error handling\r\n- Interfaces\r\n- Interface task\r\n- Pointers\r\n- Mocking\r\n- Dependency management \r\n\r\n## Lesson 3\r\n- Concurrency\r\n- Concurrency task\r\n- Package organisation\r\n- The Go community\r\n\r\n## Lesson 4 \r\n- Deployment\r\n- Go idioms and design patterns in Go\r\n- API design\r\n- Avoiding allocations and using memory\r\n\r\n## Lesson 5 +\r\n- Standard library packages 1-2 per week\r\n ",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}